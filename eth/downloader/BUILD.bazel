load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "downloader",
    srcs = [
        "api.go",
        "beacondevsync.go",
        "beaconsync.go",
        "downloader.go",
        "events.go",
        "fetchers.go",
        "fetchers_concurrent.go",
        "fetchers_concurrent_bodies.go",
        "fetchers_concurrent_headers.go",
        "fetchers_concurrent_receipts.go",
        "metrics.go",
        "modes.go",
        "peer.go",
        "queue.go",
        "resultstore.go",
        "skeleton.go",
        "statesync.go",
    ],
    importpath = "github.com/ava-labs/libevm/eth/downloader",
    visibility = ["//visibility:public"],
    deps = [
        "//:libevm",
        "//common",
        "//common/prque",
        "//core",
        "//core/rawdb",
        "//core/state/snapshot",
        "//core/types",
        "//crypto/kzg4844",
        "//eth/protocols/eth",
        "//eth/protocols/snap",
        "//ethdb",
        "//event",
        "//log",
        "//metrics",
        "//p2p/msgrate",
        "//params",
        "//rpc",
        "//triedb",
    ],
)

go_test(
    name = "downloader_test",
    srcs = [
        "downloader_test.go",
        "queue_test.go",
        "skeleton_test.go",
        "testchain_test.go",
    ],
    embed = [":downloader"],
    deps = [
        "//:libevm",
        "//common",
        "//consensus/ethash",
        "//core",
        "//core/rawdb",
        "//core/types",
        "//core/vm",
        "//crypto",
        "//eth/protocols/eth",
        "//eth/protocols/snap",
        "//event",
        "//log",
        "//params",
        "//rlp",
        "//trie",
        "//triedb",
        "@org_golang_x_exp//slog",
    ],
)
