package types

import (
	"encoding/json"
	"fmt"
)

func ExampleRawUint16ViaGenCodec() {
	var x uint16 = 42
	hdr := &Header{
		ExperimentalUint16: &x,
	}

	got, err := json.MarshalIndent(hdr, "", "  ")
	if err != nil {
		panic(err)
	}
	fmt.Println(string(got))

	// Output:
	// {
	//   "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
	//   "sha3Uncles": "0x0000000000000000000000000000000000000000000000000000000000000000",
	//   "miner": "0x0000000000000000000000000000000000000000",
	//   "stateRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
	//   "transactionsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
	//   "receiptsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
	//   "logsBloom": "0x
	//   "difficulty": null,
	//   "number": null,
	//   "gasLimit": "0x0",
	//   "gasUsed": "0x0",
	//   "timestamp": "0x0",
	//   "extraData": "0x",
	//   "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
	//   "nonce": "0x0000000000000000",
	//   "baseFeePerGas": null,
	//   "withdrawalsRoot": null,
	//   "blobGasUsed": null,
	//   "excessBlobGas": null,
	//   "parentBeaconBlockRoot": null,
	//   "experimentalUint16": 42,
	//   "hash": "0x753cbb5dd6fc62341c4c330731920e5c06f8bf242e53d23e406b0777f02d2a9b"
	// }
}
