load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "state",
    srcs = [
        "access_list.go",
        "database.go",
        "dump.go",
        "iterator.go",
        "journal.go",
        "metrics.go",
        "state.libevm.go",
        "state_object.go",
        "statedb.go",
        "statedb.libevm.go",
        "sync.go",
        "transient_storage.go",
        "trie_prefetcher.go",
        "trie_prefetcher.libevm.go",
    ],
    importpath = "github.com/ava-labs/libevm/core/state",
    visibility = ["//visibility:public"],
    deps = [
        "//common",
        "//common/hexutil",
        "//common/lru",
        "//core/rawdb",
        "//core/state/snapshot",
        "//core/types",
        "//crypto",
        "//ethdb",
        "//libevm/options",
        "//libevm/pseudo",
        "//libevm/stateconf",
        "//libevm/sync",
        "//log",
        "//metrics",
        "//params",
        "//rlp",
        "//trie",
        "//trie/trienode",
        "//trie/triestate",
        "//trie/utils",
        "//triedb",
        "@com_github_crate_crypto_go_ipa//banderwagon",
        "@com_github_holiman_uint256//:uint256",
    ],
)

go_test(
    name = "state_test",
    srcs = [
        "iterator_test.go",
        "state.libevm_test.go",
        "state_object.libevm_test.go",
        "state_object_test.go",
        "state_test.go",
        "statedb.libevm_test.go",
        "statedb_fuzz_test.go",
        "statedb_test.go",
        "sync_test.go",
        "trie_prefetcher.libevm_test.go",
        "trie_prefetcher_test.go",
    ],
    embed = [":state"],
    deps = [
        "//common",
        "//core/rawdb",
        "//core/state/snapshot",
        "//core/types",
        "//crypto",
        "//ethdb",
        "//ethdb/memorydb",
        "//libevm/ethtest",
        "//libevm/stateconf",
        "//rlp",
        "//trie",
        "//trie/trienode",
        "//trie/triestate",
        "//triedb",
        "//triedb/hashdb",
        "//triedb/pathdb",
        "@com_github_google_go_cmp//cmp",
        "@com_github_holiman_uint256//:uint256",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)
