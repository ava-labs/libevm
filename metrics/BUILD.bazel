load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "metrics",
    srcs = [
        "config.go",
        "counter.go",
        "counter_float64.go",
        "cpu.go",
        "cpu_disabled.go",
        "cpu_enabled.go",
        "cputime_nop.go",
        "cputime_unix.go",
        "debug.go",
        "disk.go",
        "disk_linux.go",
        "disk_nop.go",
        "ewma.go",
        "gauge.go",
        "gauge_float64.go",
        "gauge_info.go",
        "graphite.go",
        "healthcheck.go",
        "histogram.go",
        "inactive.go",
        "json.go",
        "log.go",
        "meter.go",
        "metrics.go",
        "opentsdb.go",
        "registry.go",
        "resetting_sample.go",
        "resetting_timer.go",
        "runtimehistogram.go",
        "sample.go",
        "syslog.go",
        "timer.go",
        "writer.go",
    ],
    importpath = "github.com/ava-labs/libevm/metrics",
    visibility = ["//visibility:public"],
    deps = [
        "//log",
        "@org_golang_x_exp//slices",
    ] + select({
        "@rules_go//go/platform:aix": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:android": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:darwin": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:dragonfly": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:freebsd": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:illumos": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:ios": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:netbsd": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:openbsd": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:osx": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:plan9": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:qnx": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:solaris": [
            "@com_github_shirou_gopsutil//cpu",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:windows": [
            "@com_github_shirou_gopsutil//cpu",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "metrics_test",
    srcs = [
        "counter_float_64_test.go",
        "counter_test.go",
        "debug_test.go",
        "ewma_test.go",
        "gauge_float64_test.go",
        "gauge_info_test.go",
        "gauge_test.go",
        "graphite_test.go",
        "histogram_test.go",
        "init_test.go",
        "json_test.go",
        "meter_test.go",
        "metrics_test.go",
        "opentsdb_test.go",
        "registry_test.go",
        "resetting_timer_test.go",
        "runtimehistogram_test.go",
        "sample_test.go",
        "timer_test.go",
        "writer_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":metrics"],
    deps = ["@org_golang_x_exp//slices"],
)
