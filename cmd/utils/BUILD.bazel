load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "utils",
    srcs = [
        "cmd.go",
        "diskusage.go",
        "diskusage_openbsd.go",
        "diskusage_windows.go",
        "flags.go",
        "flags_legacy.go",
        "prompt.go",
    ],
    importpath = "github.com/ava-labs/libevm/cmd/utils",
    visibility = ["//visibility:public"],
    deps = [
        "//accounts",
        "//accounts/keystore",
        "//common",
        "//common/fdlimit",
        "//console/prompt",
        "//core",
        "//core/rawdb",
        "//core/state/snapshot",
        "//core/txpool/legacypool",
        "//core/types",
        "//core/vm",
        "//crypto",
        "//crypto/kzg4844",
        "//eth",
        "//eth/catalyst",
        "//eth/downloader",
        "//eth/ethconfig",
        "//eth/filters",
        "//eth/gasprice",
        "//eth/tracers",
        "//ethdb",
        "//ethdb/remotedb",
        "//ethstats",
        "//graphql",
        "//internal/debug",
        "//internal/era",
        "//internal/ethapi",
        "//internal/flags",
        "//log",
        "//metrics",
        "//metrics/exp",
        "//metrics/influxdb",
        "//miner",
        "//node",
        "//p2p",
        "//p2p/enode",
        "//p2p/nat",
        "//p2p/netutil",
        "//params",
        "//rlp",
        "//rpc",
        "//triedb",
        "//triedb/hashdb",
        "//triedb/pathdb",
        "@com_github_gballet_go_libpcsclite//:go-libpcsclite",
        "@com_github_shirou_gopsutil//mem",
        "@com_github_urfave_cli_v2//:cli",
    ] + select({
        "@rules_go//go/platform:aix": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:android": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:darwin": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:dragonfly": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:freebsd": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:illumos": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:ios": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:js": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:linux": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:netbsd": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:openbsd": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:osx": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:plan9": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:qnx": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:solaris": [
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:windows": [
            "@org_golang_x_sys//windows",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "utils_test",
    srcs = [
        "export_test.go",
        "flags_test.go",
        "history_test.go",
        "prompt_test.go",
    ],
    embed = [":utils"],
    deps = [
        "//common",
        "//consensus/ethash",
        "//core",
        "//core/rawdb",
        "//core/types",
        "//core/vm",
        "//crypto",
        "//internal/era",
        "//params",
        "//rlp",
        "//trie",
        "//triedb",
    ],
)
